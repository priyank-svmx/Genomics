const dataSet = {
 sequence:"AAGTCATTGGTCATTGGTCATTGAGTCATTGACAAGTCATTGCCATCGTCATTGGAGCAGTGTCATTGCCCGTCATTGATGTGTGAGACTTAGTCATTGGGAGTCATTGTCTGGTCATTGTTCACCAGTCATTGCAGTCATTGGAGTCATTGGAGGTCATTGAACAGTCATTGGTCATTGTGCTGTCATTGGTCATTGGCTGTCATTGAGTCATTGACATGTCATTGATAGTCATTGGGTCATTGATGTCATTGTTCATGTCATTGCCGTCATTGTAGGTCATTGCTGGGGAAGCGTCATTGAGAGTCATTGGGTAGCGGTCATTGGGGTCATTGTGTCATTGCCAGTCGCAAGCAGTACGTCATTGCTATGGTCATTGGTCATTGAGCGGTCATTGCCGTCATTGTTGTCATTGACCTAGTCATTGACGAAATAGCCGGACTAAGTCATTGTGTCATTGTTGTCATTGGTCATTGAGAGGTCATTGGTCATTGAGTCATTGGTCATTGGGTCATTGGTCATTGGTCATTGCCTTGTCATTGCAGCAGTAGTCATTGGGTCATTGCGTCATTGGTCATTGGCAGTCATTGCTTCTTGTCATTGAGGGTCATTGGTCATTGACGACGGTCATTGGTCATTGGTCATTGCAGTCATTGGTCATTGTGTATTGGTCATTGGTGTCATTGTACAAGTCATTGGTCATTGTGTCATTGAGGTCATTGGTCATTGGTCATTGCGTCATTGCCTGGTCGGGTCATTGATGTCATTGGAGGGGGTTCGGTCATTGGGTCATTGACGTGTCATTGTTCAGCGTCATTGGTCATTGCGGTCATTGAGTCATTGAGAGAGTCATTGGTCATTGCAAGTTCGTCATTGTCGCGTCATTGTGTCATTGAGGTCATTGTGCTGTGTGTCATTGGTCATTGCGTCATTGAACACGTCATTGCTTATGTCATTGCTATGTCATTGAGAGTCTCAGGTCATTGCACGTCATTGATGGTGGGAGACTATTCA",
 pattern:"GTCATTGGT"
};

function program({sequence, pattern}) {
    let count = 0;
    const len = sequence.length - pattern.length;
    const substrLen = pattern.length;
    console.log(`pattern is ${pattern} \n`)
    for(let i = 0; i < len ; i += 1){
        console.log(`${i} ${substrLen} -- ${sequence.slice(i,i + substrLen)} \n`);
        if(sequence.slice(i, i + substrLen) === pattern){
            count +=1
        }
    }

    console.log(count);
    

}

program(dataSet);